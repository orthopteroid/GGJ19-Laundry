Constant Story "The Laundry Room";
Constant Headline "^Fold the laundry and clean the cat box before
    guests arrive in 10 moves!^by john howard, gamejam2019^";

Include "parser";
Include "verblib";
Include "grammar";

Constant ODDS_OF_POOP 5;
Constant ODDS_OF_SHIRT 3;

Verb "fold" * noun -> Fold;
[ FoldSub; ];

Verb "scoop" * noun -> Scoop;
[ ScoopSub; ];

! The poopy attribute is given and taken from the litter.
! The shirt is added and removed from the room (and only visible when
! in the room).
Attribute poopy;

Object  room "Laundry room"
 has	light,
 with	description "Your typical suburban laundry room
	    lit by a flickering fluorescent light.",
	daemon [;
	    if( the_time == 10 )
	    {
 		if( litter hasnt poopy && shirt notin room )
	    	{
		    deadflag = 2;
		    "Your guests arrive to a clean house!";
	    	}
	    	deadflag = 1;
	    	print "Horrors...";
	    	if( shirt in room ) print " unfolded laundry!";
 	    	if( litter has poopy ) print " stinky cat poop!";
 	    	"^Your guests arrive to a dirty house!";
	    }
	];

Object	-> can "trash can"
 has	static,
 with	name "trash" "can",
	description "A small can with a loose fitting lid. Probably just for cat poop.";

Object	-> litter
 has	static,
 with	name "litter" "box",
 	short_name [;
	    print "litter box";
 	    if( litter has poopy ) print " (currently full of poop)";
 	    rtrue; ! wizardry !
	 ],
	description [;
	    print "It seems to be quite a big box of litter."; ! nb: no crlf
 	    if( litter has poopy ) "^There is an artistic looking poop
 	    here."; ! nb: appends crlf
	],
	before [;
	 Scoop:
	    if( litter has poopy ) { 
	    	if( scoop notin player ) "With your hands? Yuck!^";
		give litter ~poopy;
		"You lift the artisticly sculptured poop into the trash.^";
	    }		
	    "The litter is kind of like sand. You can draw in it with
 	    your finger....^";
	];

Object	-> scoop "scoop"
 with	name "scoop",
	description "An essential item for scooping cat poops. Classy
 	    plastic design.";

Object -> machine "laundry machine"
 has	static,
 with	name "laundry" "machine",
	description [;
	    print "A laundry machine with a big window on the
 		side. It's pretty dark in there.^";
	    if( shirt notin room ) "There might be a shirt in the machine...";
	],	    
	daemon [;
	    if( random(ODDS_OF_SHIRT) == 1 ) {
		if( shirt in room ) "The machine rumbles and shakes.";
		move shirt to room;
		"The laundry machine coughs up a freshly clean but wrinkly shirt.";
	    }
	];

Object -> shirt
 with	name "shirt",
	short_name [;
	    print "shirt";
	    if( shirt in room ) print " (in need of folding)";
 	    rtrue; ! wizardry !
	],
	description "A clean but very wrinkled shirt",
	before [;
	 Fold:
	    print (string) random(
	     	   "You fold the shirt and place it in a closet.^",
	     	   "Folded and stacked.^",
	     	   "So many shirts to fold, so little time.^",
    	     	  );
	    remove self; ! from room
	];

Object	-> cat "black cat"
 has 	static,
 with	name "cat",
	description "A very skittish feline specimen.",
	daemon [;
	    if( random(ODDS_OF_POOP) == 1 ) {
	    	if( litter has poopy ) "The cat sniffs the litter box.";
		give litter poopy;
		"The cat pays a productive visit to the litter box.";
	    }
	    print (string) random(
		 "The cat stares at you and meows.^",
 	 	  "The cat rubs aginst your leg.^",
		  "", "", ""
		  );
	];

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

[ Initialise;
    location = room;
    remove shirt; ! start with no shirt
    StartDaemon(cat);
    StartDaemon(machine);
    StartDaemon(room);
    
    settime(0, 1);    
    
    print "^^^^^This house is a mess... What will your guests think when they arrive?^^";
];
